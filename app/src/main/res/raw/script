CREATE TABLE IF NOT EXISTS USUARIO (
    id INTEGER PRIMARY KEY NOT NULL,
    usuario VARCHAR(50),
    senha VARCHAR(15),
    nome VARCHAR(50),
    cpf VARCHAR(15) NOT NULL,
    rg VARCHAR(20),
    digitoRG VARCHAR(1),
    dataUltimoAcesso VARCHAR(20),
    ativo INTEGER,
    token TEXT
);

CREATE UNIQUE INDEX index_usuario_cpf on USUARIO (cpf);

CREATE TABLE IF NOT EXISTS TURMAS (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoTurma INTEGER NOT NULL,
    nomeTurma VARCHAR(50),
    serieTurma INTEGER NOT NULL,
    codigoDiretoria INTEGER,
    nomeDiretoria VARCHAR(50),
    codigoEscola INTEGER,
    nomeEscola VARCHAR(50),
    codigoTipoEnsino INTEGER,
    nomeTipoEnsino VARCHAR(50),
    anoLetivo INTEGER
);

CREATE UNIQUE INDEX index_turmas_codigoTurma on TURMAS (codigoTurma);

CREATE TABLE IF NOT EXISTS ALUNOS (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoMatricula TEXT NOT NULL,
    codigoAluno INTEGER,
    alunoAtivo INTEGER,
    numeroChamada INTEGER,
    nomeAluno VARCHAR(50),
    numeroRa INTEGER,
    digitoRa VARCHAR(2),
    ufRa VARCHAR(2),
    pai VARCHAR(50),
    mae VARCHAR(50),
    nascimento VARCHAR(20),
    necessidadesEspeciais VARCHAR (10),
    turma_id INTEGER,
    FOREIGN KEY(turma_id) REFERENCES TURMAS(id)
);

CREATE TABLE IF NOT EXISTS TURMASFREQUENCIA (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoTurma INTEGER, 
    codigoDiretoria INTEGER, 
    codigoEscola INTEGER, 
    codigoTipoEnsino INTEGER, 
    aulasBimestre INTEGER, 
    aulasAno INTEGER,
    aulasSemana INTEGER,
    turma_id INTEGER,
    FOREIGN KEY(turma_id) REFERENCES TURMAS(id)
);

CREATE TABLE IF NOT EXISTS DISCIPLINA (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoDisciplina INTEGER NOT NULL,
    nomeDisciplina VARCHAR(50),
    turmasFrequencia_id INTEGER,
    FOREIGN KEY(turmasFrequencia_id) REFERENCES TURMASFREQUENCIA(id)
);

CREATE TABLE IF NOT EXISTS AULAS (
    id INTEGER PRIMARY KEY NOT NULL,
    inicioHora VARCHAR(5),
    fimHora VARCHAR(5),
    diaSemana INTEGER,
    codigoAula INTEGER,
    disciplina_id INTEGER,
    FOREIGN KEY(disciplina_id) REFERENCES DISCIPLINA(id)
);

CREATE TABLE IF NOT EXISTS DIASCOMFREQUENCIA (
    id INTEGER PRIMARY KEY NOT NULL,
    dataFrequenciaDia VARCHAR(4),
    dataFrequenciaMes VARCHAR(4),
    dataFrequenciaAno VARCHAR(4),
    turmasFrequencia_id INTEGER,
    horario INTEGER,
    FOREIGN KEY(turmasFrequencia_id) REFERENCES TURMASFREQUENCIA(id));

CREATE TABLE IF NOT EXISTS TOTALFALTASALUNOS (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoMatricula TEXT,
    faltasAnuais INTEGER,
    faltasBimestre INTEGER,
    faltasBimestreAnterior INTEGER,
    faltasSequenciais INTEGER,
    disciplina_id INTEGER,
    aluno_id INTEGER,
    FOREIGN KEY(aluno_id) REFERENCES ALUNOS(id),
    FOREIGN KEY(disciplina_id) REFERENCES DISCIPLINA(id)
);

CREATE TABLE IF NOT EXISTS AVALIACOES (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoAvaliacao INTEGER NOT NULL,
    codigoTurma INTEGER,
    codigoDisciplina INTEGER,
    codigoTipoAtividade INTEGER,
    nome VARCHAR(50),
    data VARCHAR(20),
    dataCadastro VARCHAR(20),
    dataServidor VARCHAR(20),
    bimestre INTEGER,
    valeNota INTEGER,
    mobileId INTEGER,
    turma_id INTEGER,
    disciplina_id INTEGER,
    FOREIGN KEY(disciplina_id) REFERENCES DISCIPLINA(id),
    FOREIGN KEY(turma_id) REFERENCES TURMAS(id)
);

CREATE UNIQUE INDEX index_avaliacoes_id on AVALIACOES (id);

CREATE TABLE IF NOT EXISTS NOTASALUNO (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoMatricula TEXT,
    nota VARCHAR(5),
    dataCadastro VARCHAR(20),
    dataServidor VARCHAR(20),
    aluno_id INTEGER,
    usuario_id INTEGER,
    avaliacao_id INTEGER,
    FOREIGN KEY(aluno_id) REFERENCES ALUNOS(id),
    FOREIGN KEY(usuario_id) REFERENCES USUARIO(id),
    FOREIGN KEY(avaliacao_id) REFERENCES AVALIACOES(id)
);

CREATE TABLE IF NOT EXISTS BIMESTRE (
    id INTEGER PRIMARY KEY NOT NULL,
    numero INTEGER,
    inicioBimestre VARCHAR(20),
    fimBimestre VARCHAR(20),
    turmasFrequencia_id INTEGER,
    bimestreAtual INTEGER DEFAULT 0,
    FOREIGN KEY(turmasFrequencia_id) REFERENCES TURMASFREQUENCIA(id)
);

CREATE TABLE IF NOT EXISTS DIASLETIVOS (
    id INTEGER PRIMARY KEY NOT NULL,
    dataAula VARCHAR(20),
    bimestre_id INTEGER,
    diaSemana INTEGER,
    semanaMes INTEGER,
    mes INTEGER,
    FOREIGN KEY(bimestre_id) REFERENCES BIMESTRE(id)
);

CREATE TABLE IF NOT EXISTS FALTASALUNOS (
    id INTEGER PRIMARY KEY NOT NULL,
    tipoFalta VARCHAR(2),
    dataCadastro VARCHAR(20),
    dataServidor VARCHAR(20),
    aluno_id INTEGER,
    usuario_id INTEGER,
    diasLetivos_id INTEGER,
    aula_id INTEGER,
    FOREIGN KEY(aluno_id) REFERENCES ALUNOS(id),
    FOREIGN KEY(usuario_id) REFERENCES USUARIO(id),
    FOREIGN KEY(diasLetivos_id) REFERENCES DIASLETIVOS(id),
    FOREIGN KEY(aula_id) REFERENCES AULAS(id)
);

CREATE TABLE IF NOT EXISTS FECHAMENTO_TURMA (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoTurma INT,
    codigoDisciplina INT,
    codigoTipoFechamento INT,
    aulasRealizadas INT,
    aulasPlanejadas INT,
    justificativa TEXT,
    dataServidor VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS FECHAMENTO_ALUNO (
    id INTEGER PRIMARY KEY NOT NULL,
    codigoFechamento INT,
    codigoTurma INT,
    codigoMatricula TEXT,
    codigoDisciplina INT,
    codigoTipoFechamento INT,
    nota INT,
    faltas INT,
    ausenciasCompensadas INT,
    faltasAcumuladas INT,
    justificativa TEXT,
    dataServidor VARCHAR(20),
    confirmado INT,
    FOREIGN KEY(codigoTurma) REFERENCES FECHAMENTO_TURMA(codigoTurma)
);

CREATE TABLE IF NOT EXISTS MEDIA_ALUNO(
    id INTEGER PRIMARY KEY NOT NULL,
    codigoTurma INT,
    codigoDisciplina INT,
    codigoMatricula TEXT,
    bimestre INT,
    nota_media INT
);

CREATE TABLE IF NOT EXISTS TIPO_FECHAMENTO(
    id INTEGER PRIMARY KEY NOT NULL,
    codigoTipoFechamento INT,
    nome TEXT,
    ano INT,
    inicio VARCHAR(20),
    fim VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS NOVO_REGISTRO(
    codNovoRegistro INTEGER PRIMARY KEY NOT NULL,
    bimestre INTEGER NOT NULL,
    codDisciplina VARCHAR(20),
    codTurma VARCHAR(20) NOT NULL,
    ocorrencias VARCHAR(20),
    observacoes VARCHAR(20) NOT NULL,
    codGrupoCurriculo VARCHAR(20) NOT NULL,
    dataCriacao VARCHAR(20) NOT NULL,
    horarios TEXT
);

CREATE TABLE IF NOT EXISTS NOVO_CONTEUDO_REGISTRO(
    codNovoConteudo INTEGER PRIMARY KEY NOT NULL,
    codNovoRegistro INTEGER NOT NULL,
    codigoConteudo INTEGER NOT NULL,
    FOREIGN KEY(codNovoRegistro) REFERENCES NOVO_REGISTRO(codNovoRegistro)
);

CREATE TABLE IF NOT EXISTS NOVO_HABILIDADE_REGISTRO(
    codNovoHabilidade INTEGER PRIMARY KEY NOT NULL,
    codNovoConteudo INTEGER NOT NULL,
    codNovoRegistro INTEGER NOT NULL,
    habilidade INTEGER NOT NULL,
    FOREIGN KEY(codNovoConteudo) REFERENCES NOVO_CONTEUDO_REGISTRO(codNovoConteudo),
    FOREIGN KEY(codNovoRegistro) REFERENCES NOVO_REGISTRO(codNovoRegistro)
);

CREATE TABLE IF NOT EXISTS NOVO_GRUPO(
    codigo INTEGER PRIMARY KEY NOT NULL,
    anoLetivo INTEGER NOT NULL,
    codigoTipoEnsino INTEGER NOT NULL,
    serie INTEGER NOT NULL,
    codigoDisciplina INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS NOVO_CURRICULO(
    codigo INTEGER PRIMARY KEY NOT NULL,
    codigoGrupo INTEGER NOT NULL,
    bimestre INTEGER NOT NULL,
    FOREIGN KEY(codigoGrupo) REFERENCES NOVO_GRUPO(codigo)
);

CREATE TABLE IF NOT EXISTS NOVO_CONTEUDO(
    codigoConteudo INTEGER PRIMARY KEY NOT NULL,
    codigoCurriculo INTEGER NOT NULL,
    descricao TEXT NOT NULL,
    FOREIGN KEY(codigoCurriculo) REFERENCES NOVO_CURRICULO(codigo)
);

CREATE TABLE IF NOT EXISTS NOVO_HABILIDADE(
    id INTEGER PRIMARY KEY NOT NULL,
    codigoHabilidade INTEGER NOT NULL,
    codigoConteudo INTEGER NOT NULL,
    descricao TEXT NOT NULL,
    FOREIGN KEY(codigoConteudo) REFERENCES NOVO_CONTEUDO(codigoConteudo)
);

CREATE TABLE IF NOT EXISTS NOVO_CONTEUDO_HABILIDADE(
    conteudo INTEGER,
    habilidade INTEGER,
    FOREIGN KEY(conteudo) REFERENCES NOVO_CONTEUDO(codigoConteudo),
    FOREIGN KEY(habilidade) REFERENCES NOVO_HABILIDADE(codigoHabilidade),
    PRIMARY KEY(conteudo, habilidade)
);

CREATE TABLE IF NOT EXISTS CARTEIRINHAS(
    id INTEGER PRIMARY KEY NOT NULL,
    idUsuario INTEGER,
    nomeSocial VARCHAR(255),
    nomeUsuario VARCHAR(255),
    codigoCargo VARCHAR(20),
    cargoUsuario VARCHAR(100),
    rgUsuario VARCHAR(15),
    rsUsuario VARCHAR(30),
    fotoUsuario TEXT,
    qrCodeUsuario TEXT,
    statusAprovacao TEXT,
    validade TEXT,
    FOREIGN KEY(idUsuario) REFERENCES USUARIO(id)
);

CREATE TABLE IF NOT EXISTS DIASCONFLITO(
    id INTEGER PRIMARY KEY NOT NULL,
    diaLetivo_id INTEGER,
    aula_id INTEGER,
    turmasFrequencia_id INTEGER,
    disciplina_id INTEGER,
    FOREIGN KEY(diaLetivo_id) REFERENCES DIASLETIVOS(id),
    FOREIGN KEY(aula_id) REFERENCES AULAS(id),
    FOREIGN KEY(turmasFrequencia_id) REFERENCES TURMASFREQUENCIA(id),
    FOREIGN KEY(disciplina_id) REFERENCES DISCIPLINA(id)
);

CREATE TABLE REGISTRO_JSON(
    _id INTEGER PRIMARY KEY NOT NULL,
    json TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS COMUNICADOS(
    cd_comunicado INTEGER PRIMARY KEY NOT NULL,
    titulo TEXT,
    comunicado TEXT,
    data TEXT,
    visualizado INTEGER
);